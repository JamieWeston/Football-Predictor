name: Core Predict (auto)

on:
  workflow_dispatch: {}
  schedule:
    # UTC â€“ run every day at 06:05 and 18:05
    - cron: "5 6 * * *"
    - cron: "5 18 * * *"
  push:
    branches: [ main ]
    paths:
      - "plpred/**"
      - "scripts/**"
      - "requirements*.txt"
      - ".github/workflows/core_predict.yml"

permissions:
  contents: write

concurrency:
  group: core-predict-${{ github.ref }}
  cancel-in-progress: true

jobs:
  predict:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip tooling
        run: python -m pip install --upgrade pip wheel setuptools

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install runtime deps
        run: |
          pip install -r requirements.txt
          # Optional: install dev requirements if present (won't fail if missing)
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt || true; fi

      - name: Ensure output folders
        run: |
          mkdir -p data
          mkdir -p reports

      - name: Sanity import
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python - <<'PY'
          import json, pandas as pd, numpy as np
          import importlib
          importlib.import_module("plpred.ratings")
          importlib.import_module("plpred.predict")
          print("sanity: imports OK")
          PY

      - name: Generate predictions & tips (CORE)
        env:
          PYTHONPATH: ${{ github.workspace }}
          PREDICT_MODE: core          # dispatcher in scripts/generate.py selects core
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}  # optional, used if your core generator fetches fixtures
        run: |
          python -u -m scripts.generate

      - name: Verify outputs exist
        run: |
          test -s data/predictions.json || (echo "ERROR: data/predictions.json missing" && exit 1)
          echo "predictions.json present"

      - name: Upload outputs (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: core-outputs
          path: |
            data/*.json
            data/*.csv
            reports/**
          if-no-files-found: ignore
          retention-days: 7

      - name: Commit updated outputs to main
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Add common outputs; ignore if some don't exist
          git add data/predictions.json || true
          git add data/tips.json || true
          git add data/team_strengths.json || true
          git add reports/PR_BODY.md || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(core): update predictions & tips [skip ci]"
            git push origin HEAD:${{ github.ref_name }}
          fi
