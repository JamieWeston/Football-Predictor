name: Predict (direct commit to main)

on:
  workflow_dispatch:
  schedule:
    - cron: "30 6 * * *"     # daily 06:30 UTC
    - cron: "30 22 * * SAT"  # Sat 22:30 UTC
    - cron: "30 22 * * SUN"  # Sun 22:30 UTC
    - cron: "30 8 * * MON"   # Mon 08:30 UTC

permissions:
  contents: write

jobs:
  predict:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: predict
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Ensure output folders
        run: |
          mkdir -p data reports

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip tooling
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install runtime deps
        run: pip install -r requirements.txt

      # Optional: update ratings if present; safe no-op if script doesn't exist
      - name: Update team ratings (optional)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python - <<'PY'
          import importlib.util, sys
          if importlib.util.find_spec('scripts.update_ratings_elo'):
              import runpy
              runpy.run_module('scripts.update_ratings_elo', run_name='__main__')
              print("Ran scripts.update_ratings_elo")
          else:
              print("No scripts.update_ratings_elo; skipping")
          PY

      - name: Generate predictions & tips
        env:
          PYTHONPATH: ${{ github.workspace }}
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}  # optional
          FD_WINDOW_DAYS: "14"
          FD_STATUSES: "SCHEDULED,TIMED"
          PYTHONUNBUFFERED: "1"
        run: |
          python -u -m scripts.generate
          echo "---- sanity: data/predictions.json (tail) ----"
          tail -n 50 data/predictions.json || true
          echo "---- sanity: data/tips.json (tail) ----"
          tail -n 50 data/tips.json || true
          # warn hard if predictions ended up empty
          python - <<'PY'
          import json, sys
          try:
              with open('data/predictions.json') as f:
                  j=json.load(f)
              preds=j.get('predictions',[])
              if not preds:
                  print("WARNING: predictions.json contains 0 matches", file=sys.stderr)
          except Exception as e:
              print("ERROR reading predictions.json:", e, file=sys.stderr)
              sys.exit(1)
          PY

      - name: Upload data as artifact
        uses: actions/upload-artifact@v4
        with:
          name: data-json
          path: |
            data/*.json
            data/*.csv
          if-no-files-found: warn

      - name: Commit updated JSON/CSV to main
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update predictions and data (auto)"
          file_pattern: |
            data/*.json
            data/*.csv
            reports/PR_BODY.md
          add_options: '-A'
