name: Predict & open PR (auto-merge)

on:
  workflow_dispatch:
  schedule:
    - cron: "30 6 * * *"
    - cron: "30 22 * * SAT"
    - cron: "30 22 * * SUN"
    - cron: "30 8 * * MON"

permissions:
  contents: write
  pull-requests: write

jobs:
  predict:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    concurrency:
      group: predict
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install deps
        run: pip install -r requirements.txt

      # -------- OPTIONAL: Try Understat (do not fail the job) --------
      - name: Fetch Understat xG (best-effort)
        continue-on-error: true
        env:
          PYTHONPATH: ${{ github.workspace }}
          US_LEAGUE: "epl"
          US_SEASONS: "2023,2024,2025"
          US_SLEEP_MS: "300"
        run: |
          if [ -f scripts/fetch_understat_xg.py ]; then
            python -m scripts.fetch_understat_xg || true
          else
            echo "No scripts/fetch_understat_xg.py present; skipping."
          fi

      - name: Sanity check Understat CSV (non-fatal)
        run: |
          if [ -f data/understat_matches.csv ]; then
            python - <<'PY'
            import pandas as pd
            df = pd.read_csv("data/understat_matches.csv")
            print(f"[sanity] understat rows={len(df)} seasons=", sorted(df['season'].dropna().unique().tolist())[:8])
            PY
          else
            echo "[sanity] No understat CSV; will rely on football-data fallback."
          fi

      # -------- ALWAYS: fetch FD fallback --------
      - name: Fetch football-data results (fallback)
        env:
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}
          FD_SEASONS: "2023,2024,2025"
          FD_SLEEP_MS: "300"
          PYTHONPATH: ${{ github.workspace }}
        run: python -m scripts.fetch_fd_results

      - name: Sanity check FD CSV
        run: |
          python - <<'PY'
          import pandas as pd, os
          p = "data/fd_results.csv"
          if not os.path.exists(p):
            raise SystemExit("Missing FD CSV at " + p)
          df = pd.read_csv(p)
          print(f"[sanity] fd rows={len(df)} seasons=", sorted(df['season'].dropna().unique().tolist())[:8])
          PY

      # -------- Build strengths from whichever dataset is available --------
      - name: Compute team strengths
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m scripts.compute_team_strengths

      - name: Generate predictions & tips
        env:
          PYTHONPATH: ${{ github.workspace }}
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}
          FD_WINDOW_DAYS: "14"
          FD_STATUSES: "SCHEDULED,TIMED"
          PYTHONUNBUFFERED: "1"
        run: python -u -m scripts.generate

      - name: Untrack Python caches before PR
        run: |
          git rm -r --cached -f --ignore-unmatch **/__pycache__ || true
          git rm -r --cached -f --ignore-unmatch **/*.pyc **/*.pyo || true

      - name: Create Pull Request (auto-merge)
        uses: peter-evans/create-pull-request@v6
        with:
          branch: "auto/update-${{ github.run_id }}"
          title: "Predictions & tips update â€“ ${{ github.workflow }} #${{ github.run_id }}"
          body-path: "reports/PR_BODY.md"
          commit-message: "chore: update strengths and predictions"
          delete-branch: true
          merge: true
          merge-method: squash

      - name: Post Checkout
        run: |
          echo "--- data dir ---"; ls -la data || true
          echo "--- reports dir ---"; ls -la reports || true
