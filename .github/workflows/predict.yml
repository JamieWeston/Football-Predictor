name: Predict & open PR (auto-merge)

on:
  workflow_dispatch:
  schedule:
    - cron: "30 6 * * *"     # daily 06:30 UTC
    - cron: "30 22 * * SAT"  # Sat night top-up (UTC)
    - cron: "30 22 * * SUN"  # Sun night top-up (UTC)
    - cron: "30 8 * * MON"   # Mon morning tidy-up (UTC)

permissions:
  contents: write
  pull-requests: write

jobs:
  predict:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: predict
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      # Optional: pull rolling match xG from Understat
      - name: Fetch Understat xG
        env:
          PYTHONPATH: ${{ github.workspace }}
          # Adjust seasons/rate limiting if needed
          US_SEASONS: "2023,2024,2025"
          US_SLEEP_MS: "300"
        run: python -u -m scripts.fetch_understat_xg

      # Optional: compute team strengths from Understat rows
      - name: Compute team strengths
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -u -m scripts.compute_team_strengths

      # ---- UPDATED BLOCK (unbuffered logs + statuses) ----
      - name: Generate predictions & tips
        env:
          PYTHONPATH: ${{ github.workspace }}
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}
          FD_WINDOW_DAYS: "14"            # bump to 21 while debugging if needed
          FD_STATUSES: "SCHEDULED,TIMED"  # only future fixtures
          PYTHONUNBUFFERED: "1"           # stream logs immediately
        run: python -u -m scripts.generate
      # ----------------------------------------------------

      # Tiny guard so we notice empty output early
      - name: Smoke test – fail if no predictions written
        run: |
          python - <<'PY'
          import json, sys, pathlib
          p = pathlib.Path("data/predictions.json")
          if not p.exists():
              print("[smoke] data/predictions.json not found")
              sys.exit(1)
          data = json.loads(p.read_text())
          n = len(data.get("predictions", []))
          print(f"[smoke] predictions count: {n}")
          if n == 0:
              sys.exit(1)
          PY

      # Keep git clean in the PR
      - name: Untrack Python caches before PR
        run: |
          git rm -r --cached -f --ignore-unmatch **/__pycache__ || true
          git rm -r --cached -f --ignore-unmatch **/*.pyc **/*.pyo || true

      # Auto-PR and auto-merge back to main
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: "auto/update-${{ github.run_id }}"
          title: "Predictions & tips update – ${{ github.workflow }} #${{ github.run_id }}"
          body-path: "reports/PR_BODY.md"
          commit-message: "chore: update strengths, predictions and tips"
          delete-branch: true
          merge: true
          merge-method: squash

      # Just to help you verify artifacts in logs
      - name: Post Checkout
        run: |
          echo "--- data dir ---"; ls -la data || true
          echo "--- reports dir ---"; ls -la reports || true
