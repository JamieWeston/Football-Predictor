name: Predict & open PR (auto-merge)

on:
  workflow_dispatch:
  schedule:
    - cron: "30 6 * * *"     # daily 06:30 UTC
    - cron: "30 22 * * SAT"  # Sat night top-up (UTC)
    - cron: "30 22 * * SUN"  # Sun night top-up (UTC)
    - cron: "30 8 * * MON"   # Mon morning tidy-up (UTC)

permissions:
  contents: write
  pull-requests: write

jobs:
  predict:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    concurrency:
      group: predict
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      # 1) Fetch rolling team match xG from Understat
      - name: Fetch Understat xG
        env:
          PYTHONPATH: ${{ github.workspace }}
          # Optional overrides:
          # US_SEASONS: "2023,2024,2025"
          # US_SLEEP_MS: "300"
        run: python -m scripts.fetch_understat_xg

      # 2) Compute team strengths from Understat rows
      - name: Compute team strengths
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m scripts.compute_team_strengths

      # 3) Generate predictions with strengths
      - name: Generate predictions & tips
        env:
          PYTHONPATH: ${{ github.workspace }}
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}
          FD_WINDOW_DAYS: "14"
        run: python -m scripts.generate

      # 4) Create PR (keep going even if it errors)
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "auto/update-${{ github.run_id }}"
          title: "Predictions & tips update â€“ ${{ github.workflow }} #${{ github.run_id }}"
          body-path: "reports/PR_BODY.md"
          commit-message: "chore: update strengths, predictions and tips"
          labels: automation,predictions
          author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          committer: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

      # 5) Auto-merge (squash). If the PR number isn't in outputs, find it by branch.
      - name: Auto-merge PR (squash)
        if: always()   # run even if previous step had a non-zero exit
        uses: actions/github-script@v7
        with:
          script: |
            const branch = `auto/update-${{ github.run_id }}`;
            // Prefer the action output if present:
            let prNumber = parseInt("${{ steps.cpr.outputs['pull-request-number'] || '' }}", 10);
            if (!prNumber || Number.isNaN(prNumber)) {
              // Look up any open PR for this head branch
              const { data } = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                head: `${context.repo.owner}:${branch}`
              });
              if (data.length) prNumber = data[0].number;
            }
            if (!prNumber) {
              core.info("No PR found (likely no changes). Skipping merge.");
              return;
            }
            core.info(`Merging PR #${prNumber} with squash...`);
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: "squash"
            });

      - name: Delete PR branch
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const ref = `heads/auto/update-${{ github.run_id }}`;
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref
              });
              core.info(`Deleted ${ref}`);
            } catch (e) {
              core.warning(`Delete ref skipped or failed: ${e.message}`);
            }

      # optional diagnostic
      - name: Post Checkout
        run: |
          echo "--- data dir ---"
          ls -la data || true
          echo "--- reports dir ---"
          ls -la reports || true
