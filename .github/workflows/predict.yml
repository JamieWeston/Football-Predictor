name: Predict & open PR (auto-merge)

on:
  workflow_dispatch:
  schedule:
    - cron: "30 6 * * *"     # daily 06:30 UTC
    - cron: "30 22 * * SAT"  # Sat night top-up (UTC)
    - cron: "30 22 * * SUN"  # Sun night top-up (UTC)
    - cron: "30 8 * * MON"   # Mon morning tidy-up (UTC)

permissions:
  contents: write
  pull-requests: write

jobs:
  predict:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    concurrency:
      group: predict
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ✅ NEW: upgrade pip/setuptools/wheel BEFORE installing requirements
      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install deps
        run: pip install -r requirements.txt

      # Pull rolling PL match xG/xGA from Understat and save CSV
      - name: Fetch Understat xG
        env:
          PYTHONPATH: ${{ github.workspace }}
          # Optional overrides:
          # US_SEASONS: "2023,2024,2025"  # comma-separated Understat seasons
          # US_SLEEP_MS: "300"            # be polite to their API
        run: python -m scripts.fetch_understat_xg

      # Convert the raw Understat rows into per-team attack/defence strengths
      - name: Compute team strengths
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m scripts.compute_team_strengths

      # Generate predictions JSON for the next 14 days
      - name: Generate predictions & tips
        env:
          PYTHONPATH: ${{ github.workspace }}
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}
          FD_WINDOW_DAYS: "14"            # or bump to 21 while debugging
          FD_STATUSES: "SCHEDULED,TIMED"  # ensure we only take future fixtures
          PYTHONUNBUFFERED: "1"           # force immediate log flush
        run: python -u -m scripts.generate

      # Keep PRs clean — don’t track Python caches / bytecode
      - name: Untrack Python caches before PR
        run: |
          git rm -r --cached -f --ignore-unmatch **/__pycache__ || true
          git rm -r --cached -f --ignore-unmatch **/*.pyc **/*.pyo || true

      # Open a PR with the new data and auto-merge it back to main (squash)
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: "auto/update-${{ github.run_id }}"
          title: "Predictions & tips update – ${{ github.workflow }} #${{ github.run_id }}"
          body-path: "reports/PR_BODY.md"
          commit-message: "chore: update strengths, predictions and tips"
          delete-branch: true
          merge: true
          merge-method: squash

      # (optional) quick directory listing in logs for debugging
      - name: Post Checkout
        run: |
          echo "--- data dir ---"
          ls -la data || true
          echo "--- reports dir ---"
          ls -la reports || true
