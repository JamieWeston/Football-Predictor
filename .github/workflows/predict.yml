name: Predict & open PR (auto-merge)

on:
  workflow_dispatch:
  schedule:
    - cron: "30 6 * * *"     # daily 06:30 UTC
    - cron: "30 22 * * SAT"  # Sat night top-up (UTC)
    - cron: "30 22 * * SUN"  # Sun night top-up (UTC)
    - cron: "30 8 * * MON"   # Mon morning tidy-up (UTC)

permissions:
  contents: write
  pull-requests: write

jobs:
  predict:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: predict
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Build rolling strengths (optional, safe if present)
        env:
          PYTHONPATH: ${{ github.workspace }}
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}
        run: |
          python - <<'PY'
          try:
              import scripts.strengths_xg as s
              s.build_strengths()
          except Exception as e:
              print("[strengths] skipped:", e)
          PY

      - name: Update team ratings (Elo fallback, optional)
        env:
          PYTHONPATH: ${{ github.workspace }}
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}
        run: |
          python - <<'PY'
          try:
              import scripts.update_ratings_elo as u
              u.main()
          except Exception as e:
              print("[elo] skipped:", e)
          PY

      - name: Generate predictions & tips
        env:
          PYTHONPATH: ${{ github.workspace }}
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}
          FD_WINDOW_DAYS: "14"
        run: python -m scripts.generate

      - name: Archive predictions snapshot
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: python -m scripts.archive_predictions

      - name: Evaluate & update accuracy dashboards
        env:
          PYTHONPATH: ${{ github.workspace }}
          FOOTBALL_DATA_TOKEN: ${{ secrets.FOOTBALL_DATA_TOKEN }}
        run: python -m scripts.evaluate_backtest

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          branch: "auto/update-${{ github.run_id }}"
          title: "Auto: refreshed ratings & predictions â€“ run #${{ github.run_id }}"
          body-path: "reports/PR_BODY.md"
          commit-message: "chore: update strengths, predictions, tips, and metrics"
          delete-branch: true

      - name: Merge Pull Request (squash)
        if: steps.cpr.outputs.pull-request-number
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ steps.cpr.outputs.pull-request-number }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = Number(process.env.PR_NUMBER || 0);
            if (!pr) { core.setFailed('No PR number to merge'); }
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr,
              merge_method: 'squash'
            });
            core.info(`Merged PR #${pr}`);
