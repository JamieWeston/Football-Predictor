name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip tooling
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install runtime + dev deps
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          echo "---- pip freeze (top) ----"
          pip freeze | head -n 50

      # <<< CHANGED: no importlib.util here; use __import__ to avoid shadowing
      - name: Sanity check required modules
        run: |
          python - <<'PY'
          import sys
          required = ["numpy","pandas","scipy","pytest","requests","pydantic"]
          missing = []
          for mod in required:
            try:
              __import__(mod)
            except Exception as e:
              print(f"Missing {mod}: {e}", file=sys.stderr)
              missing.append(mod)
          if missing:
            print("ERROR: missing modules:", ", ".join(missing), file=sys.stderr)
            sys.exit(1)
          print("All required modules present:", ", ".join(required))
          PY

      - name: Ensure package import path (if tests import 'plpred')
        run: |
          python - <<'PY'
          import sys, os
          root = os.getcwd()
          assert os.path.isdir(root), root
          print("Repo root:", root)
          PY
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest -q

